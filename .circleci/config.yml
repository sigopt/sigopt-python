version: 2.1

variables:
  python-versions: &python-versions ["3.10", "3.9", "3.8", "3.7"]

orbs:
  slack: circleci/slack@4.4.4

slack-fail-post-step: &slack-fail-post-step
  - slack/notify:
      branch_pattern: main
      channel: eng
      event: fail
      template: basic_fail_1

commands:
  setup:
    steps:
      - checkout
      - run: sudo pip install --upgrade pip setuptools
  test-cli:
    steps:
      - setup
      - run: pip install -e '.[dev,orchestrate]'
      - run: pytest -rw -v test/cli
  test-client:
    steps:
      - setup
      - run: pip install -e '.[dev]'
      - run: pytest -rw -v test/client
  test-orchestrate:
    steps:
      - setup
      - run: pip install -e '.[dev,orchestrate]'
      - run: pytest -rw -v test/orchestrate
  test-runs:
    steps:
      - setup
      - run: pip install -e '.[dev]'
      - run: pytest -rw -v test/runs test/validate
  test-xgboost:
    steps:
      - setup
      - run: pip install -e '.[dev,xgboost]'
      - run: pytest -rw -v test/xgboost
  lint:
    steps:
      - setup
      - run: sudo make update
      - run: sudo pip install pylint==2.9.6
      - run: make lint
  tutorial:
    steps:
      - checkout
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y expect
      - run: echo 'export TEST_ACCOUNT_API_TOKEN=$TEST_ACCOUNT_API_TOKEN' >> $BASH_ENV
      - run: sudo pip install sigopt
      - run: pip install xgboost scikit-learn
      - run: ./ci/tutorial/sigopt_config.exp
      - run: echo 'export SIGOPT_PROJECT=my_first_project' >> $BASH_ENV
      - run: sigopt run python ./ci/tutorial/model.py

jobs:
  lint:
    docker:
      - image: circleci/python:3.9
    steps:
      - lint
  test-cli:
    parameters:
      python-version: &python-version-param
        type: enum
        enum: *python-versions
    docker:
      - image: circleci/python:<< parameters.python-version >>
    steps:
      - test-cli
  test-client:
    parameters:
      python-version:
        <<: *python-version-param
    docker:
      - image: circleci/python:<< parameters.python-version >>
    steps:
      - test-client
  test-orchestrate:
    parameters:
      python-version:
        <<: *python-version-param
    docker:
      - image: circleci/python:<< parameters.python-version >>
    steps:
      - test-orchestrate
  test-runs:
    parameters:
      python-version:
        <<: *python-version-param
    docker:
      - image: circleci/python:<< parameters.python-version >>
    steps:
      - test-runs
  test-xgboost:
    parameters:
      python-version:
        <<: *python-version-param
    docker:
      - image: circleci/python:<< parameters.python-version >>
    steps:
      - test-xgboost
  tutorial:
     parameters:
       TEST_ACCOUNT_API_TOKEN:
         type: string
         default: $TEST_ACCOUNT_API_TOKEN
     docker:
       - image: circleci/python:3.6
     steps:
       - tutorial

  final-catch-all:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Success
          command: exit 0

workflows:
  main:
    jobs: &jobs
      - test-cli:
          matrix:
            parameters:
              python-version: *python-versions
      - test-client:
          matrix:
            parameters:
              python-version: *python-versions
      - test-orchestrate:
          matrix:
            parameters:
              python-version: *python-versions
      - test-runs:
          matrix:
            parameters:
              python-version: *python-versions
      - test-xgboost:
          matrix:
            parameters:
              python-version: *python-versions
      - lint
      - tutorial
      - final-catch-all:
          context: slack-secret
          requires:
            - test-cli
            - test-client
            - test-orchestrate
            - test-runs
            - test-xgboost
            - lint
            - tutorial
          post-steps: *slack-fail-post-step

  rot-check:
    jobs: *jobs
    triggers:
      - schedule:
          cron: "0 8,16 * * *"
          filters:
            branches:
              only:
                - main
